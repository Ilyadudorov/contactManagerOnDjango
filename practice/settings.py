"""
Django settings for practice project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from os import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

CSRF_TRUSTED_ORIGINS = ["http://localhost:1337"]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

SECRET_KEY = os.environ.get('SECRET_KEY')

# DEBUG = int(os.environ.get('DEBUG', default=0))

# ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS').split(' ')


# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-^nfaz!2tx#xol7ar08nf_5cp7%t^iik2)p^+k^%s0)j%$doo&r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  
#Переменная отвечающая за дебаг режим, после отключения режима дебаг ошибки будут отображаться,
# но с гораздно меньшей точностью. Выключать когда проект уже готов к проду например.

ALLOWED_HOSTS = ['*']   #Разрешенные ip адреса после отключения дебаг режима.



CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
} 


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'weather.apps.WeatherConfig',
    'contactManager.apps.ContactmanagerConfig',
    'django.contrib.postgres',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'practice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'practice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',   # Используется PostgreSQL
#         'NAME': 'postgres', # Имя базы данных
#         'USER': 'postgres', # Имя пользователя
#         'PASSWORD': 'postgres', # Пароль пользователя
#         'HOST': 'pgdb', # Наименование контейнера для базы данных в Docker Compose
#         'PORT': '5432',  # Порт базы данных
#     }
# }

# DATABASES = {
#      "default": {
#          "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
#          "NAME": os.environ.get("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
#          "USER": os.environ.get("SQL_USER", "user"),
#          "PASSWORD": os.environ.get("SQL_PASSWORD", "postgres"),
#          "HOST": os.environ.get("SQL_HOST", "localhost"),
#          "PORT": os.environ.get("SQL_PORT", "5432"),
#      }
# }

DATABASES = {
     "default": {
         "ENGINE": os.environ.get("SQL_ENGINE"),
         "NAME": os.environ.get("SQL_DATABASE"),
         "USER": os.environ.get("SQL_USER"),
         "PASSWORD": os.environ.get("SQL_PASSWORD"),
         "HOST": os.environ.get("SQL_HOST"),
         "PORT": os.environ.get("SQL_PORT"),
     }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles" 

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  #MEDIA_ROOT это кастомная переменная она создает пусть следующим образом:
                                              # берет главный каталог проекта, то есть переменную BASE_DIR, и добавляет туда папку media.
                                              # 
MEDIA_URL = '/media/' # Данная переменная нужна для добавления пути к граф файлам, это нужно для обращения к ним
